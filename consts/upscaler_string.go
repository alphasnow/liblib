// Code generated by "stringer -type=Upscaler -linecomment -output upscaler_string.go"; DO NOT EDIT.

package consts

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Latent-0]
	_ = x[LatentAntialiased-1]
	_ = x[LatentBicubic-2]
	_ = x[LatentBicubicAntialiased-3]
	_ = x[LatentNearest-4]
	_ = x[LatentNearestExact-5]
	_ = x[Lanczos-6]
	_ = x[Nearest-7]
	_ = x[ESRGAN_4x-8]
	_ = x[LDSR-9]
	_ = x[R_ESRGAN_4xPlus-10]
	_ = x[R_ESRGAN_4xPlus_Anime6B-11]
	_ = x[ScuNET_GAN-12]
	_ = x[ScuNET_PSNR-13]
	_ = x[SwinIR_4x-14]
	_ = x[C4x_UltraSharp-15]
	_ = x[C8x_NMKD_Superscale-16]
	_ = x[C4x_NMKD_Siax_200k-17]
	_ = x[C4x_NMKD_Superscale_SP_178000_G-18]
	_ = x[C4x_AnimeSharp-19]
	_ = x[C4x_Foolhardy_Remacri-20]
	_ = x[BSRGAN-21]
	_ = x[DAT2-22]
	_ = x[DAT3-23]
	_ = x[DAT4-24]
	_ = x[C4x_DeCompress-25]
	_ = x[C4x_DeCompress_Strong-26]
}

const _Upscaler_name = "01234567891011121314151617181920212223242526"

var _Upscaler_index = [...]uint8{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44}

func (i Upscaler) String() string {
	if i < 0 || i >= Upscaler(len(_Upscaler_index)-1) {
		return "Upscaler(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Upscaler_name[_Upscaler_index[i]:_Upscaler_index[i+1]]
}
